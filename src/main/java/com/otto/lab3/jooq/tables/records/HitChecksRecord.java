/*
 * This file is generated by jOOQ.
 */
package com.otto.lab3.jooq.tables.records;


import com.otto.lab3.jooq.tables.HitChecks;

import java.time.OffsetDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record9;
import org.jooq.Row9;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class HitChecksRecord extends UpdatableRecordImpl<HitChecksRecord> implements Record9<Integer, String, Double, Double, Double, OffsetDateTime, Long, Boolean, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>s335109.hit_checks.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>s335109.hit_checks.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>s335109.hit_checks.session_id</code>.
     */
    public void setSessionId(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>s335109.hit_checks.session_id</code>.
     */
    public String getSessionId() {
        return (String) get(1);
    }

    /**
     * Setter for <code>s335109.hit_checks.x</code>.
     */
    public void setX(Double value) {
        set(2, value);
    }

    /**
     * Getter for <code>s335109.hit_checks.x</code>.
     */
    public Double getX() {
        return (Double) get(2);
    }

    /**
     * Setter for <code>s335109.hit_checks.y</code>.
     */
    public void setY(Double value) {
        set(3, value);
    }

    /**
     * Getter for <code>s335109.hit_checks.y</code>.
     */
    public Double getY() {
        return (Double) get(3);
    }

    /**
     * Setter for <code>s335109.hit_checks.r</code>.
     */
    public void setR(Double value) {
        set(4, value);
    }

    /**
     * Getter for <code>s335109.hit_checks.r</code>.
     */
    public Double getR() {
        return (Double) get(4);
    }

    /**
     * Setter for <code>s335109.hit_checks.calling_date</code>.
     */
    public void setCallingDate(OffsetDateTime value) {
        set(5, value);
    }

    /**
     * Getter for <code>s335109.hit_checks.calling_date</code>.
     */
    public OffsetDateTime getCallingDate() {
        return (OffsetDateTime) get(5);
    }

    /**
     * Setter for <code>s335109.hit_checks.execution_time</code>.
     */
    public void setExecutionTime(Long value) {
        set(6, value);
    }

    /**
     * Getter for <code>s335109.hit_checks.execution_time</code>.
     */
    public Long getExecutionTime() {
        return (Long) get(6);
    }

    /**
     * Setter for <code>s335109.hit_checks.hit_status</code>.
     */
    public void setHitStatus(Boolean value) {
        set(7, value);
    }

    /**
     * Getter for <code>s335109.hit_checks.hit_status</code>.
     */
    public Boolean getHitStatus() {
        return (Boolean) get(7);
    }

    /**
     * Setter for <code>s335109.hit_checks.timezone</code>.
     */
    public void setTimezone(String value) {
        set(8, value);
    }

    /**
     * Getter for <code>s335109.hit_checks.timezone</code>.
     */
    public String getTimezone() {
        return (String) get(8);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record9 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row9<Integer, String, Double, Double, Double, OffsetDateTime, Long, Boolean, String> fieldsRow() {
        return (Row9) super.fieldsRow();
    }

    @Override
    public Row9<Integer, String, Double, Double, Double, OffsetDateTime, Long, Boolean, String> valuesRow() {
        return (Row9) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return HitChecks.HIT_CHECKS.ID;
    }

    @Override
    public Field<String> field2() {
        return HitChecks.HIT_CHECKS.SESSION_ID;
    }

    @Override
    public Field<Double> field3() {
        return HitChecks.HIT_CHECKS.X;
    }

    @Override
    public Field<Double> field4() {
        return HitChecks.HIT_CHECKS.Y;
    }

    @Override
    public Field<Double> field5() {
        return HitChecks.HIT_CHECKS.R;
    }

    @Override
    public Field<OffsetDateTime> field6() {
        return HitChecks.HIT_CHECKS.CALLING_DATE;
    }

    @Override
    public Field<Long> field7() {
        return HitChecks.HIT_CHECKS.EXECUTION_TIME;
    }

    @Override
    public Field<Boolean> field8() {
        return HitChecks.HIT_CHECKS.HIT_STATUS;
    }

    @Override
    public Field<String> field9() {
        return HitChecks.HIT_CHECKS.TIMEZONE;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getSessionId();
    }

    @Override
    public Double component3() {
        return getX();
    }

    @Override
    public Double component4() {
        return getY();
    }

    @Override
    public Double component5() {
        return getR();
    }

    @Override
    public OffsetDateTime component6() {
        return getCallingDate();
    }

    @Override
    public Long component7() {
        return getExecutionTime();
    }

    @Override
    public Boolean component8() {
        return getHitStatus();
    }

    @Override
    public String component9() {
        return getTimezone();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getSessionId();
    }

    @Override
    public Double value3() {
        return getX();
    }

    @Override
    public Double value4() {
        return getY();
    }

    @Override
    public Double value5() {
        return getR();
    }

    @Override
    public OffsetDateTime value6() {
        return getCallingDate();
    }

    @Override
    public Long value7() {
        return getExecutionTime();
    }

    @Override
    public Boolean value8() {
        return getHitStatus();
    }

    @Override
    public String value9() {
        return getTimezone();
    }

    @Override
    public HitChecksRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public HitChecksRecord value2(String value) {
        setSessionId(value);
        return this;
    }

    @Override
    public HitChecksRecord value3(Double value) {
        setX(value);
        return this;
    }

    @Override
    public HitChecksRecord value4(Double value) {
        setY(value);
        return this;
    }

    @Override
    public HitChecksRecord value5(Double value) {
        setR(value);
        return this;
    }

    @Override
    public HitChecksRecord value6(OffsetDateTime value) {
        setCallingDate(value);
        return this;
    }

    @Override
    public HitChecksRecord value7(Long value) {
        setExecutionTime(value);
        return this;
    }

    @Override
    public HitChecksRecord value8(Boolean value) {
        setHitStatus(value);
        return this;
    }

    @Override
    public HitChecksRecord value9(String value) {
        setTimezone(value);
        return this;
    }

    @Override
    public HitChecksRecord values(Integer value1, String value2, Double value3, Double value4, Double value5, OffsetDateTime value6, Long value7, Boolean value8, String value9) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached HitChecksRecord
     */
    public HitChecksRecord() {
        super(HitChecks.HIT_CHECKS);
    }

    /**
     * Create a detached, initialised HitChecksRecord
     */
    public HitChecksRecord(Integer id, String sessionId, Double x, Double y, Double r, OffsetDateTime callingDate, Long executionTime, Boolean hitStatus, String timezone) {
        super(HitChecks.HIT_CHECKS);

        setId(id);
        setSessionId(sessionId);
        setX(x);
        setY(y);
        setR(r);
        setCallingDate(callingDate);
        setExecutionTime(executionTime);
        setHitStatus(hitStatus);
        setTimezone(timezone);
    }
}
